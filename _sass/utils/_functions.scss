@function get-top-value ($list) {
  $len: length($list);
  @if $len == 1 {
    @return nth($list, 1);
  } @else if $len == 2 {
    @return nth($list, 1);
  } @else if $len == 3 {
    @return nth($list, 1);
  } @else if $len == 4 {
    @return nth($list, 1);
  } @else {
    @error 'Incorrect parameter \'#{$list}\'';
  }
}

@function get-right-value ($list) {
  $len: length($list);
  @if $len == 1 {
    @return nth($list, 1);
  } @else if $len == 2 {
    @return nth($list, 2);
  } @else if $len == 3 {
    @return nth($list, 2);
  } @else if $len == 4 {
    @return nth($list, 2);
  } @else {
    @error 'Incorrect parameter \'#{$list}\'';
  }
}

@function get-bottom-value ($list) {
  $len: length($list);
  @if $len == 1 {
    @return nth($list, 1);
  } @else if $len == 2 {
    @return nth($list, 1);
  } @else if $len == 3 {
    @return nth($list, 3);
  } @else if $len == 4 {
    @return nth($list, 3);
  } @else {
    @error 'Incorrect parameter \'#{$list}\'';
  }
}

@function get-left-value ($list) {
  $len: length($list);
  @if $len == 1 {
    @return nth($list, 1);
  } @else if $len == 2 {
    @return nth($list, 2);
  } @else if $len == 3 {
    @return nth($list, 3);
  } @else if $len == 4 {
    @return nth($list, 4);
  } @else {
    @error 'Incorrect parameter \'#{$list}\'';
  }
}

@function list-scale ($list, $scale) {
  $new-list: null;
  @each $val in $list {
    $new-list: append($new-list, round($val * $scale));
  }
  @return $new-list;
}

@function list-join ($list, $separator: ' ') {
  $str: '';
  @each $item in $list {
    $str: $str + $item + $separator;
  }
  @return str-slice($str, 1, -(str-length($separator) + 1));
}

@function str-trim ($string) {
  @while str-slice($string, -1, -1) == ' ' {
    @if str-length($string) > 1 {
      $string: str-slice($string, 1, -2);
    } @else {
      $string: '';
    }
  }
  @return $string;
}

@function get-last-selector ($selector: null) {
  @if $selector == null {
    $selector: '' + &;
  }
  $selector: str-trim($selector);
  $len: str-length($selector);
  @for $n from $len - 1 through 1 {
    $segment: str-slice($selector, $n, $len);
    @if str-index($segment, ' ') == 1 {
      @return str-slice($segment, 2);
    }
  }
  @return $selector;
}

@function get-initial-selectors ($selector: null) {
  @if $selector == null {
    $selector: '' + &;
  }
  $selector: str-trim($selector);
  $len: str-length($selector);
  @for $n from $len through 2 {
    $segment: str-slice($selector, 1, $n);
    @if str-slice($segment, $n, $n) == ' ' {
      @return str-trim(str-slice($segment, 1, $n - 1));
    }
  }
  @return $selector;
}

@function is-class-selector ($selector) {
  @if str-slice($selector, 1, 1) == '.' {
    @return true;
  } @else {
    @return false;
  }
}

@function is-id-selector ($selector) {
  @if str-slice($selector, 1, 1) == '#' {
    @return true;
  } @else {
    @return false;
  }
}

@function glue-class-modifier ($modifier) {
  $last-selector: get-last-selector('' + &);
  @if is-class-selector($last-selector) {
    @return '&' + $last-selector + $modifier;
  } @else {
    @error 'Expect the last selector \'#{$last-selector}\' is a class selector.'
  }
}

@function prepend-selector ($selector) {
  $initial-selectors: get-initial-selectors('' + &);
  $last-selector: get-last-selector('' + &);
  @return list-join(($initial-selectors, $selector, $last-selector), ' ');
}
